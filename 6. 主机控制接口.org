* 六、主机/控制器接口
主机控制器接口(HCI)是主机与控制器之间，主要完成两个任务：一个是发送命令给控制器和接收来自控制器的事件，另一个是发送和接收来自对端设备的数据。
一般来说，主机接口既是两个设备之间的物理上的接口，也是逻辑上的接口。逻辑接口定义了命令、事件和数据的封包格式。而物理接口则规定了主机和控制器之间如何传输这些数据包。
** 物理接口
蓝牙规范里面定义了4种物理接口,每一种对应着不同的用途：
a. 通用异步收发器(URAT)提供了最简单的传输方式。
b. 3线URAT则提供可靠的UART传输方式。
c. USB为电脑和类似的设备提供高速的，通用的传输方式。
d. 安全数字输入和输出(SDIO)为消费电子设备提供中等速度的传输方式。
*** UART
通用异步收发器（UART）提供了最简单的传输方式。
UART接口中每一个HCI数据包有下列三种报文类型编码：
a. 命令(command)=0x01
b. 数据(data)=0x02
c. 事件(event)=0x04
UART接口不能在低电压的情况下进行信号收发，不适合低电压设备。
*** 3 线UART
它比UART更复杂，能减少误比特情况，具有更好的鲁棒性。
它的主要模式：
a. 链路建立
b. 活动状态
c. 低电压状态
*** USB
主要是为了拥有USB Host的设备而设计。
*** SDIO
高速并且能耗低，误码率也低。
** 逻辑接口
HCI物理传输接口就是逻辑接口中的一种。所谓的逻辑接口是指在单芯片设备上，不需要在组件之间真正实现这样的信息传输接口。
当系统中的控制器和主机分别位于两个芯片上，HCI逻辑接口就体现为在二者之间传输数据的物理接口。
它包含三个概念：
1. 信道(channel)
2. 数据包格式(packet format)
3. 流控(flow control)
*** HCI 信道
控制器与其他设备建立连接后，控制器的底层HCI接口就创建一个HCI信道，使用一个连接句柄(connection handle)来标识这个HCI信道。
连接句柄既用来标识主机交给控制器并准备发往对端的数据，又用来标识控制器从对端收到的准备交给主机的数据。
*** 命令数据包
主机通过向控制器发送命令数据包来执行命令。这些命令通常用于配置控制器的状态，或者请求控制器完成操作。
它包括：用来确认发送命令的操作码，参数长度字段和命令参数。每个命令都有自己独特的参数。
|      2 |        1 | 参数长度 |
| 操作码 | 参数长度 | 参数     |
低功耗蓝牙有三种基本命令类型：
a. 配置控制器的状态
b. 请求执行特定的操作
c. 管理连接
1. 配置控制器的状态
   可以将控制器视为一个大状态机，有一系列的参数可以进行配置。如果状态机正在使用，通常不能进行调整，要等结束后才行。
2. 请求指定操作
   一些命令可以请求控制器执行执行操作，但不会改变设备状态或连接状态。
3. 管理连接
   设备建立连接后，可以通过命令来管理连接。
*** 事件数据包
控制器发送主机的事件数据包主要用于发送信息和反馈之前的命令。
它包含事件类型编码、参数的长度字段和事件参数，每个事件都有一套独特的参数。
三种基本事件类型：
a. 通用命令完成事件
b. 通用命令状态事件
c. 特定命令完成事件

HCI事件数据包格式:
|            1 |        1 | 参数长度 |
| 事件类型编码 | 参数长度 | 参数     |

1. 通用命令完成事件
   当主机发送给控制器的命令执行完毕时，控制器立即返回一个通用命令完成事件。事件参数包含了之前发送的命令操作码和执行命令的返回参数。
   返回参数中的第一个参数是状态码，状态码用来标识命令执行成功与否。
2. 通用命令状态事件
3. 特定命令完成事件
   有些命令需要一段时间才能完成执行，它们都有对应的、并且是唯一的特定命令完成事件。
   需要注意的是，命令是否执行完毕并不以收到特定命令完成事件作为标志。
*** 数据包
HCI数据包格式：
|         2 |        1 | 数据长度 |
| 句柄\标记 | 数据长度 | 数据     |
数据包是指主机和控制器之间传输的应用数据。控制器接收来自主机的数据包，将其传给对端设备。对端设备收到数据之后，将其从控制器发往主机。
HCI数据包有两种标记(flags):数据包边界标记(Packet Boundary Flag)和广播标记(Broadcast Flag)。
数据包边界标记来确认上层协议L2CAP的信息是一个开始数据包还是一个延续包。
| 标识 | 主机->控制器 | 控制器->主机 |
| 开始 |           00 |           01 |
| 延续 |           10 |           01 |
*** 命令流控
有两种形式：命令流控和数据流控。
控制器使用命令流控同时处理多个HCI命令。因为控制器内部拥有足够的缓存，能够存储一定数量的命令；主机可以通过控制器来或者缓冲区的长度，从而得知可以同时发送的命令的最大数量。
HCI接口不支持事件流控。因为事件流控的数量受限于可处理命令的数量，另外主机比控制器拥有更多的资源，所以能够顺序地缓冲和处理这些事件。
*** 数据流控
有两种数据流：主机到控制器以及控制器到主机。主机到控制器的数据流控是必须的，而控制器到主机的流控可以忽略。
*** 控制器的配置
不多讲，太细，看资料或者书籍
https://blog.csdn.net/weixin_38491862/article/details/80597845
*** 广播和观察
两个低功耗蓝牙设备之间的最基本的通信模型就是广播(broadcasting)和观察(observing)模型，采用广播和扫描来传输数据。
**** 广播
控制器有两类数据可以通过广播发送：广播数据和扫描响应数据。
[[file:images/broadcast.png]]
**** 被动扫描
可以使用被动扫描接受对端设备的广播数据包。
控制器的可配置扫描参数如下:
a. 扫描类型
b. 扫描间隔
c. 扫描窗口
d. 扫描策越

扫描间隔和扫描窗口是两个非常重要的参数，因为他们决定了控制器的扫描频率和扫描时间的长短。他们共同决定控制器的扫描占空比，既扫描窗口与扫描间隔二者的比值。
[[file:images/unactiveScan.png]]
**** 主动扫描
即可捕获广播包，也可以捕获可能的扫描响应包
[[file:images/scan.png]]
** 发起连接
想要实现更多的功能必须依赖两个设备之间的连接。
当然，要建立连接，其中一个蓝牙设备应处于可连接的广播状态，由另一个设备发起连接。
连接对象可以白名单对象，指定的单一设备。
** 连接管理
建立连接后，设备就可以对连接进行管理，包括切换到低功耗模式、增加或减少间隔时间、设置加密或终止连接等。
*** 更新连接
若当前的连接参数不再适用时，主设备可以进行修改。比如修改interval，MTU等。
[[file:images/updateConnection.png]]
*** 更新信道映射图
控制器可以在任何时候启动链路层控制规程修改信道映射图。
[[file:images/updateChannelMap.png]]
*** 交换功能列表
主机可以获知当前连接所支持的功能。
[[file:images/exchangeFeatures.png]]
*** 交换版本信息
*** 加密连接
......
*** 重启加密
......
*** 终止连接
如果不再需要发送数据，或者维持连接比断开后再重新连接需要更多的能量时，主机可以终止连接。
[[file:images/closeConnection.png]]
