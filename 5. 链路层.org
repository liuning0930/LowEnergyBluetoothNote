* 五、链路层
链路层定义了两个设备如何利用无线电传输信息。它包含了报文，广播，数据信道的详细定义，也定义了其他设备的流程，广播的数据，连接的建立，连接的管理以及连接中的数据传输。
** 链路层的状态机
链路层的状态机定义了5中状态：
1. 就绪态
2. 广播态
3. 扫描态
4. 发起态
5. 连接态
由上面可以看出，低功耗蓝牙另一个基本设计策略：将广播、发现和连接过程与连接中的数据传输分离开来。
只有在连接态中使用数据报文，广播态、扫描态、发起态使用广播报文。
连接态有2个子状态：主或从。在连接态中，2个设备相互传送数据信道报文。
另外，链路层是一个“独裁者”，如果成为了主设备，便不能同时成为从设备。类似地，从设备也不能同时成为主设备。这也意味着主设备不能发送可用于连接的广播报文。
** 报文
低功耗蓝牙规范中，有两类报文：广播报文和数据报文。是广播报文还是数据报文由其传输所在的信道决定的。
总的数据图：
[[file:images/packageformat.png]]
*** 白化
频移键控接收机的一个有趣之处在于，其连续接收相同比特的能力很差。例如“0000000000”，这时候接收机会认为中心频率向左移动，进而导致频率失锁，丢失数据。
白化器是一个很短的输出“0”，“1”序列的随机数发生器，与原有数据进行异或操作，在通过白化序列逐位异或还原。
通过使用随机白化器，原始信息中的一段比特会被转化成一段高度随机化的序列。这降低了接收机评率失所的概率。如果原始数据信息已经是随机的，进一步的随机化一般也没什么坏处。
*** 报文结构
数据包结构：单位bit
|    8 |       32 |    8 |    8 | 0~296 |  24 |
| 前导 | 接入地址 | 抱头 | 长度 | 数据  | CRC |
1. 比特序与字节
   报文是一比特一比特传输的，但他们同时也是由数据的字节组成的。当数据的字节传输时，总是从最低位开始。
2. 前导
   接收机用它来配置自动增益控制，以及确定“0”，“1”比特所使用的频率。
   自动增益控制器必须检测出输入信号的能量等级，并调整增益，使得信号刚好处于接收机能够轻松工作的范围之中。
3. 接入地址
   报文接下来的32比特是接入地址。两种类型：
   * 广播接入地址
   * 数据接入地址
   广播接入地址在广播数据，或是广播、扫描、发起连接时使用。数据接入地址在连接建立之后的两个设备间使用。
   当控制器试图接收一个报文时，需要事先知道待接收报文的接入地址，减少噪声。
   链路层也不知道其他设备啥时候发送报文，只能保留40us接收到的比特，和前导、接入地址进行匹配。这一过程称为与接入地址相关。
   对于广播信道，接入地址是固定值 0x8E89BED6。
   接入地址最基本的规则是不能有超过6个连“0”或”1“。数据信道接入地址与广播信道接入地址至少要有1个比特的不同。
4. 报头
   报头包含了广播报文的类型以及一些标记位，这些标记位指出了报文使用的公共地址还是随机地址。
   | Tyep            | Behavior     |
   | ADV_IND         | 通用广播提示 |
   | ADV_DIRECT_IND  | 定向连接指示 |
   | ADV_NONCONN_IND | 不可连接指示 |
   | ADV_SCAN_IND    | 可扫描指示   |
   | SCAN_REQ        | 主动扫描指示 |
   | SCAN_REP        | 主动扫描响应 |
   | CONNECT_REQ     | 连接请求     |
5. 长度
   对于广播报文。长度域包含6个比特，有效值的范围是6~37。对于数据报文。长度域5个比特，有效值的范围是0~31。
   长度域后是payload，其长度是长度域指出的字节数。
6. payload
   传输的真实数据。
7. CRC
   CRC对报头、长度域以及payload进行计算，检查是否错误。
*** 信道
低功耗蓝牙的信道宽度为2MHz, 经典蓝牙是1MHz。
1. 跳频
   跳频算法用于数据连接中。数据信道37个，是一个质数，因此跳频算法非常简单：
   f(n+1) = (f(n) + hop) mod 37  //hop（5~16）
2. 自适应跳频
   自适应跳频能够将一个已知的坏信道映射到一个已知的好信道，从而减少其他设备对数据报文传送的干扰。连接中的两个设备都要记录好、坏信道的映射关系
   来调整信道。
*** 设备发现
低功耗蓝牙设备通过广播信道来发现其他设备。共有4种不同类型的广播：通用的，定向的，不可连接的以及可发现的。
设备每次广播时，会在3个广播信道上发送相同的报文。这些报文被称为一个广播事件。除了定向报文以外，其他广播事件可以选20ms~10.28s的间隔。
通常，一个广播中的设备会每秒广播一次。广播事件之间的时间间隔称为广播间隔，主机可以配置它。
但是，设备周期性的发送广播会有一个问题：由于设备的时钟会不同程度的漂移，两个设备可能在很长一段时间同事广播而造成干扰。除了定向广播之外的其他广播事件，
发送时间均会被扰动。实现该扰动的方式为，在上一次广播事件发送后加入0~·0ms的随机延迟。

扫描是低功耗蓝牙广播的重要组成部分。扫描用于接收广播事件。扫描时间取决于有多少时间用于扫描以及需要多块发现其他设备。
**** 通用广播
通用广播是用途最广的广播方式。进行通用广播的设备能够被扫描设备扫描到，或者在接收到连接请求时作为从设备进入一个连接。通用广播可以在没有连接的情况下发出，没有主从设备之分。
**** 定向广播
当设备之间需要快速建立连接的时候，就要用到定向广播。
这种报文包含两个地址：广播着的地址和发起者的地址。(在iPhone手机上，每15分钟改变它自己的地址, 是个大限制)
发起设备收到发给自己的定向广播报文后，可以立即发送连接请求作为回应。
定向广播事件也有特殊的时序要求。完整的广播事件必须每3.75ms重复一次。这一要求使得扫描设备只需要扫描3.75ms便可以收到定向广播设备的消息。
如此快的发送会让报文充斥着广播信道，定向广播不可以持续1.28s以上的时间。一旦到了1.28，主机便只能使用间隔长得多的通用广播让其他设备来连接。
当使用定向广播时，设备不能被主动扫描。此外，定向广播报文的payload中也不能带有其他附加数据。该payload只能包含两个必需的地址，别无其他。
**** 不可连接广播
**** 可发现广播
该设备可以被发现，既可以广播数据，又可以响应扫描，但不能建立连接。
*** 广播
广播数据能够被附近的任何被动或主动扫描设备接收到。广播数据的接收无法被确认。广播设备无法知道时候有设备接收到它的数据，或者是否有设备试图侦听它的数据，是一种不可靠的操作。
*** 建立连接
连接使用数据信道在两个设备之间可靠地发送信息，采取了自适应跳频增强鲁棒性(robust),同时使用了非常低的占空比，尽可能地降低功耗。
设备创建连接的过程：
[[file:images/connection.png]]
设备首先广播可连接广播事件，其他设备收到后即可发起连接。
连接开始需包含的信息：
1. 连接中使用的接入地址
   由主设备提供，随机生成，需要遵循一些规则。
2. CRC初始值
   由主设备提供的随机数，可以保证主设备同不同的从设备通信。
3. 发送窗口大小 
4. 发送窗口偏移
5. 连接间隔
6. 从设备延迟
7. 监控超时
8. 自适应跳频信道图
9. 跳频算法增强
10. 休眠时钟精度

**** 发送窗口
  从设备可以自行决定广播时间，是最需要保存电量的设备。但是，如果主设备已经在做其他事情，也许是一些更重要的事情，那么它必须让低功耗蓝牙错开当前的活动。
   在连接建立期间，用窗口大小和窗口便宜传递上述信息。
   当连接请求数据包发送完毕，存在一个1.25ms的强制时延，紧接着是发送上述两个参数。发射窗口便宜可以是0到连线间隔之间的任意值，但必须为1.25ms的整数倍。
   从发送窗口开始，从设备打开其接收器，并等待来自主设备的数据包。如果到发送窗口结束时仍未收到数据包，从设备终止倾听，并会在一个连接的间隔后再次尝试。
 
  iOS由于系统封装的层很高，只需要进行扫描，连接，获取服务和特性后，进行读写操作。MTU大小和Interval都自动设备。
   Android相比较于iOS可以设置MTU大小，设置失败时候默认23。
**** 连接事件
   在一个连接当中，主设备会在每个连接事件里向从设备发送数据包。




*** 发送数据
在一个连接里，设备通过在连接事件中发送数据包来相互通信。数据报文和广播报文不同，前者是单独进行的通信，后者则是对所有的侦听设备发送广播。
广播报文和数据报文间最大的区别是报头的格式和payload的长度。
数据报文的payload可以为0~31字节不等。payload长度为0视为空包。
无论链路层加密与否，传给控制器的未加密数据包最多只能携带27个字节的数据。
**** 数据报头
   包含4个字段：
   * 逻辑链路标识符(LLID)
   * 序列号(SN)
   * 下一个预期序列号(NESN)
   * 更多数据(MD)
**** LLID
它用于判断数据报文属于哪种类型：
a. 链路层控制报文(11) ---- 用于管理连接
b. 高层报文(10) ---- 也用于一个完整报文
c. 高层报文延续(01)
数据包LLID为11，会直接交给链路层控制实体，由它来解析改数据包内容。

所有其他的数据包都要经过主机，要么来自主机，要么发给主机。 主机能够发送大于27字节的数据，但由于无法放入单个链路层的数据包，必须支持分段。
具体做法就是把数据包贴上“高层报文开始”或"高层报文继续"的标签。
**** SN
为了使数据传输变得可靠，所有的数据包均带有序列号。连接建立后，第一个数据包的序号为0；每次发送新的数据包时，其序列号与上个数据包的序列号不同。
这使得接收装置能够判断接收的数据包的性质：如果序列号与之前的一样，则为重传报文，如果序列号和之前的不同，则为新报文。
在数据包中，用一个比特来表示序列号，在1和0 之间交替。
**** 确认
数据包的确认需要用到另一个比特，即所谓的下一个期望序列号。
file:images/transmit.png
**** 更多数据
它用来通知对端设备自己还有其他的数据准备发送。如果收到了它，应该在当前连接事件中继续与端设备通信。
*** 加密
在连接时，可以对payload中的数据进行加密，确保数据的机密性，从而抵御攻击者。
后续仔细看。
*** 管理连接
两个设备一旦连接，便可以收发数据和管理连接。连接管理涉及在链路层发送控制消息，包含下列七个链路层控制规程：
| 更新连接参数
| 改变自适应跳频信道图
| 加密链路
| 重加密链路
| 交互功能位
| 交换版本信息
| 终止链路
**** 连接参数更新
连接建立时，主设备通过链接请求数据包发送连接参数。当连接活跃了一段时间，连接参数也许不再适用于当前使用的服务。出于提高效率的目的，连接参数需要进行更新。较之首先断开连接、接着更换新参数重新连接，还有一种在链路中更新参数更为简单的途径，如下图所示：
[[file:images/updata_l2cap.png]]
此，主设备向从设备发送连接更新请求，即LL_CONNECTION_UPDATE_REQ，当中携带了新的参数。这些参数不必进行协商，从设备或者接受和使用它们，或者断开链路。连接更新请求中包含了早先创建连接时用过的一部分参数，还有一个称为瞬时（instant）的新参数：
1.传输窗口大小
2.传输窗口偏移量
3.连接间隔
4.从设备延迟
5.监控超时
6.瞬时
瞬时参数决定了连接更新的开始时刻。发送消息时，主设备为连接更新选定一个未来的时间点，并且放在消息中。接到消息后，从设备会记住这个未来的时刻，届时再切换至新的连接参数。这有助于解决无线系统里的一个最大问题----报文重传。只要数据包的重传次数足够，并最终在瞬时之前传输成功，上述过程执行起来就不会有问题。但是，如果该数据包届时没能完成传输，链路就有可能丢失。
由于低功耗蓝牙没有时钟，要决定瞬时时刻只有依靠计算连接事件的个数。因此，每一个连接事件都会被计数，链路上的第一个连接事件，也就是在连接请求之后的位于首个传输窗口里的连接事件记为 0。因此，瞬时实际上是一个连接事件的计数器，相应的连接事件到来时就使用新的参数。为了让从设备收到数据包，主设备必须为其提供足够的机会。不过从设备延迟是多少，都应该至少保证 6 次数据发送机会。也就是说，如果从设备延迟为 500ms，那么瞬时通常被设定在 3s 之后的某个未来时刻。
瞬时到来时，从设备开始侦听发送窗口，就好像连接建立的过程那样。主设备能够调整从设备的计时，总体而言不超过 1.25ms。不过，由于主设备可能还是一个经典蓝牙设备，上述调整使其得以协调低功耗蓝牙从设备，从而更好地完成调度。一旦该过程结束，新的连接间隔、监控超时、从设备延迟值将投入使用。
**** 自适应跳频
[[file:images/update_channel.png]]
链路层控制规程不允许从设备改变信道图，甚至不能向主设备告知自身信道条件。
**** 启动加密
**** 重启加密
**** 版本交换
**** 功能交换
对端设备利用功能信息来判断本端设备到底能做些什么。
**** 终止连接
断开链路并把主从设备从连接态转为就绪态
要终止链路，设备首先发送一个终止指示报文(LL_TERMINATE_IND),等待链路层对该报文进行确认，然后断开连接。
可能还有其他原因造成：
1. 监控超时
2. MIC失效
*** 鲁棒性
链路层采用了两个强有力的算法以确保数据不受干扰地传输，以及从本端主机发送到对端主机时不发送变化。
1. 自适应跳频
2. 强CRC
   在低功耗蓝牙中，CRC值的长度要比经典蓝牙或者其他大部分短距离无线技术长50%。经典蓝牙是16位，低功耗采用24位。
