* 七、逻辑链路控制和适配协议
逻辑链路控制和适配协议（L2CAP）是个复用层，可以让低功耗蓝牙复用三条不同的信道。支持数据的分割和重组功能，使得较大的报文可以在底层无线电中传输。
** 背景
和经典蓝牙完全不同，低功耗蓝牙的一个基本概念在于无连接模式。用户只在需要发送数据的时候才建立莲接，其他时候设备可以长期处于断开连接状态。为了实现该功能，无连接模式必须扩展到L2CAP层，并且只能使用固定信道。在低功耗蓝牙设计之初并未选择L2CAP，而是使用了另一个称为协议适配层（Protocol Adaptation Layer，PAL）的设计。PAL仅支持两种数据包：高层协议信令数据包以及自身的信令数据包。PAL不支持分割或重组，也没有区分不同协议的功能。协议设计的一个基本原则是每一层协议都是独立的。在经典蓝牙中，面向连接信道可以把某对单独的应用数据与其他信道的数据相分离。举个例子，虽然所有的面向连接信道都能添加额外的数据完整性检测，但它们可能有不同的流规范，或者隶属于流信道而非尽力交付信道。面向连接信道非常适合那些复杂的、多种数据同时传输的系统。比如手机既可以向汽车的立体声发送高质量的语音流，还可以发送电话簿、免提等。
*** L2CAP信道
L2CAP有个很简单的概念——信道。毕竟L2CAP是一种复用层，有多个信道也不足为怪。
信道是指一个数据包序列，连接两个设备上的一对服务。在两个设备间允许同时启用多条信道。低功耗蓝牙只支持固定信道。固定信道指的是两个设备一建立连接就已经存在的、没有任何配置参数的信道。
L2CAP信道标识符
|    信道标识符 | 用法               |
|        0x0000 | 保留：不能使用     |
|        0x0001 | 经典蓝牙信令信道   |
|        0x0002 | “无连接”信道       |
|        0x0003 | AMP管理协议        |
|        0x0004 | 属性协议           |
|        0x0005 | 低功耗信令信道     |
|        0x0006 | 安全管理协议       |
| 0x0007~0x003E | 保留：日后可能使用 |
|        0x003F | AMP测试协议        |
| 0x0040~0xFFFF | 面向连接信道       |
低功耗蓝牙一共使用了3个信道：信息标识符0x0004用于属性协议；信道0x0005用于低功耗蓝牙信令信道；信道0x0006用于安全管理。
*** L2CAP数据包结构
每个L2CAP数据包的净荷前端都包含一个32位比特报头。假设使用分割和重组，那么数据包的长度信息必须包含在报头中，以便判断数据包的结束。使用分割和重组机制需要为每个通过HCI接口的数据包打上标记，分为开始数据包或延续数据包。不过，这里没有定义怎样标记当前数据包的最后一个片段。意味着，判断当前数据包唯一方法是发送一个新的数据包，或者将数据包的长度信息放在开始数据包中。如下图所示，报头包括2字节的长度字段和2字节的信道标识符。长度字段表示报头后的信息载荷字节数。在经典蓝牙中，信息载荷还可以包含额外的报头和信息，但在低功耗蓝牙的L2CAP层中并没有其他有意义的信息结构。
|    2 |          2 | 0 ~ 65535       | 字节 |
| 长度 | 信道标识符 | Payload信息载荷 |      |
在所有低功耗蓝牙信道上，信息载荷均始于23字节的最大传输单元(MTU)。MTU表示一个L2CAP信道中信息载荷的最大字节数。
意味着所有低功耗蓝牙设备必须支持在空间传输27字节数据包-4字节为L2CAP报头，23字节信息载荷。
*** 低功耗信令信道
低功耗信令信道用于主机层级的信令。每个低功耗信令信道的数据包均含有一操作码，随后为各种参数。低功耗信令信道支持的命令操作码如下：
a. 命令拒绝（Command Reject）
b. 连接参数更新请求（Connection Parameter Update Request）
c. 连接参数更新响应（Connection Parameter Update Response】
无论什么时候发送信令命令，其信息载荷总是包含一标识符。改标识符仅1字节，用于匹配请求和响应。举例来说，如果请求的标识符是0x35，则响应该请求的数据包必须使用0x35为标识符。
如此一来，只要每个请求有不同的标识符，多个请求便能同时发送。同时确保在用完所有标识符前不能重复使用，也不能使用0x00标识符。
L2CAP命令数据包：
[[file:images/l2capcommand.png]]
**** 命令拒绝
用于拒绝设备收到的不支持的信息包。该命令与经典蓝牙中的命令拒绝完全一样。它包含一个原因代码以及相关信息。其中的原因代码可以是“命令不理解”或“信令MTU溢出”。
在设备收到了不支持的命令时可以使用“命令不理解”原因代码；当收到未定义的命令时也可以使用，这使得设备具有更好的兼容性。
**** 连接参数更新和请求的响应
可以让从设备更新链路层的连接参数，这些参数包括连接事件间隔（从设备希望主设备允许从设备发送数据包的频率）、从设备延迟（从设备能够忽略主设备的连接事件的最大值）以及监控超时。连接参数更新请求命令仅用于从设备向主设备发送，这是由于主设备随时都能启动链路层连接参数更新控制（ConnectionParameter Update Control）规程。如果该命令由主设备发送，从设备会将其视为一个错误，并返回带有“命令不理解”原因代码的“命令拒绝”命令。
[[file:images/l2capupdaterequest.png]]
